debug=false
spring.thymeleaf.cache=false
spring.main.lazy-initialization=true
# management.endpoints.web.exposure.include=*
# logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
spring.output.ansi.enabled=ALWAYS

# テーブル初期化(最初に１度ALWAYSで起動すること)
# ALWAYS：アプリ起動時に毎回実行, NEVER：実行しない
spring.datasource.initialization-mode=always

# DataBase接続設定
# spring.datasource.platform=mysql
# spring.datasource.url=jdbc:mysql://localhost:3306/cms?serverTimezone=JST
# spring.datasource.url=jdbc:mariadb://localhost:3306/cmsboot
spring.jpa.properties.hibernate.default_schema=cmsboot
spring.datasource.url=jdbc:postgresql://localhost:5432/cmsboot?currentSchema=cmsboot
spring.datasource.platform=postgresql
# spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=admin
spring.datasource.password=admin
spring.datasource.driverClassName=org.postgresql.Driver

# 起動時のジョブ実行を停止
spring.batch.job.enabled=false


# ログファイル出力先
logging.file.name=../log/cms.log
job.log.dir=../log/job

# メールサーバ接続設定
mail.host=localhost
mail.port=3025
mail.from=info@example.com
mail.subject=Password Reissue URL

# パスワードリセットメール用
app.host=localhost
app.port=8080
app.contextPath=/
app.passwordReissueProtocol=http


# ロックアウトの継続時間(秒)
security.lockingDurationSeconds=3
# ロックアウトするまでの認証失敗回数
security.lockingThreshold=3
# パスワードの有効期間(秒)
security.passwordLifeTimeSeconds=1000000
#security.passwordLifeTimeSeconds=1
# パスワード再発行トークンの有効期間(秒)
security.tokenLifeTimeSeconds=300
# パスワード再発行の失敗回数の上限値
security.tokenValidityThreshold=3
# 新規パスワードの強度(最低文字数)
security.passwordMinimumLength=4
# 新規パスワードの強度(パスワードの再利用制限(過去何回分))
security.passwordHistoricalCheckingCount=3
# 新規パスワードの強度(パスワードの再利用制限(変更からの経過時間(秒)))
security.passwordHistoricalCheckingPeriod=180
# 再発行トークンの削除タイミング(秒間隔)　・・・・要確認
security.reissueInfoCleanupSeconds=180
# テンポラリファイルの削除タイミング(秒間隔)　・・・・要確認
security.tempFileCleanupSeconds=60

app.security.prohibitedChars=&\\!"<>*
app.security.prohibitedCharsForFileName=&\\!"<>*;:


spring.jackson.date-format=yyyy/MM/dd'T'HH:mm:ss.SSSZ
spring.jackson.time-zone=Asia/Tokyo

spring.servlet.multipart.max-file-size=256MB
spring.servlet.multipart.max-request-size=256MB
spring.servlet.multipart.enabled=true


#AutoConfigが準備するBeanの上書きを許可
spring.main.allow-bean-definition-overriding=true


logging.level.org.elasticsearch.index.search.slowlog.query=INFO
spring.data.elasticsearch.properties.index.search.slowlog.threshold.query.info=1ms

# File Store
file.store.basedir=uploadfile
file.store.default_file_type=default

# Hibernate
# spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
# spring.jpa.hibernate.ddl-auto=none
# spring.jpa.hibernate.naming.physical-strategy=jp.co.stnet.cms.common.namingstrategy.CustomPhysicalNamingStrategy
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
# spring.jpa.properties.hibernate.dialect.storage_engine=innodb
# spring.jpa.properties.hibernate.connection.charSet=UTF-8
# spring.jpa.show-sql=true


# Hibernate Search (Lucena)
spring.jpa.properties.hibernate.search.backend.directory.root=../lucene/indexes
spring.jpa.properties.hibernate.search.backend.analysis.configurer=class:jp.co.stnet.cms.config.MyLuceneAnalysisConfigurer


server.tomcat.accesslog.enabled=true


# mybatis.type-aliases-package=jp.co.stnet.cms
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=30
mybatis.configuration.callSettersOnNulls=true
# mybatis.lazy-initialization=true















